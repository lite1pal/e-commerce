import { type Session } from "next-auth";
import { SessionProvider, useSession } from "next-auth/react";
import { type AppType } from "next/app";
import { api } from "~/utils/api";
import "~/styles/globals.css";
import { Toaster } from "react-hot-toast";
import Head from "next/head";
import Script from "next/script";

const MyApp: AppType<{ session: Session | null }> = ({
  Component,
  pageProps: { session, ...pageProps },
}) => {
  return (
    <SessionProvider session={session}>
      <Head>
        <title>E-commerce</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Script
        src="https://kit.fontawesome.com/ce54b8dfe1.js"
        crossOrigin="anonymous"
      />
      <Toaster />
      <Auth>
        <Component {...pageProps} />
      </Auth>
    </SessionProvider>
  );
};

function Auth({ children }: React.PropsWithChildren<object>) {
  const { status } = useSession({ required: true });

  if (status === "loading") {
    return <div className="h-screen w-screen bg-slate-900"></div>;
  }

  return children;
}

export default api.withTRPC(MyApp);
